"<"     { printf("<\n"); return lt; }
">"     { printf(">\n"); return gt; }
"="     { printf("=\n"); return eq; }
"<="    { printf("<=\n"); return lteq; }
">="    { printf(">=\n"); return gteq; }
"=="    { printf("==\n"); return eqeq; }
"!="    { printf("!=\n"); return neq; }
"+"     { printf("+\n"); return pl; }
"-"     { printf("-\n"); return min; }
"*"     { printf("*\n"); return mul; }
"/"     { printf("/\n"); return div; }
"++"    { printf("++\n"); return incr; }
"--"    { printf("--\n"); return decr; }
"!"     { printf("!\n"); return neq; }
"||"    { printf("||\n"); return or; }
"&&"    { printf("&&\n"); return and; }




/*
"BEGIN"         return BEGIN;
"FLOAT"|"float" return FLOAT
"int" |"INT"    return INT;
"BOOL"|"bool"   return BOOL;
"STRING"|"string" return STRING;

{INT_NUM}       return INT_NUM;
{FLOAT_NUM}     return FLOAT_NUM;
{real}          return real;
{char}          return char;
{string}        return string;

{commentaire}       return commentaire;
{seul_commentaire}  return seul_commentaire;*/

/*
"<"     return lt;
">"     return gt;
"="     return eq;

"=="    return eqeq;
"!="    return neq;
"+"     return pl;
"-"     return min;
"&&"    return and;
"*"     return mul;
"||"    return or;
"++"    return incr;
"<="    return lteq;
">="    return gteq;
"!"     return neq;
"--"    return decr;
"/"     return div;

"END"   return END;
*/











"<"     { return '<'; }
">"     { return '>'; }
"="     { return '='; }
":="    { return ":="; }
"=="    { return "=="; }
"!="    { return "!="; }
"+"     { return '+'; }
"-"     { return '-'; }
"&&"    { return "&&"; }
"*"     { return '*'; }
"||"    { return "||"; }
"++"    { return "++"; }
"<="    { return "<="; }
">="    { return ">="; }
"!"     { return '!'; }
"--"    { return '--'; }
"/"     { return '/'; }



S:charr {printf("syntaxe correcte %d ",nb_ligne);}
|INT charr eq INT_NUM pvg 
|FLOAT charr pvg 
|FLOAT charr eq FLOAT_NUM pvg
|BOOL charr pvg
|BOOL charr eq BOOL_VAR pvg